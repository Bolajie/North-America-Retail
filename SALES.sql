 --CHECK TABLES
SELECT *
  FROM [CAPSTONE PROJECT].[dbo].[Sales Analysis];

  --CREATE TABLES
SELECT * INTO DimOrders
	from (SELECT Order_id, Order_Date, Ship_Date, Ship_mode
	from [Sales Analysis]) as dimorders;
SELECT * INTO DimCustomer
	from (SELECT customer_id, customer_name, Segment
		from [Sales Analysis]) as dimCustomer;
SELECT * INTO DimLocation
	from (SELECT Country, City, State, Postal_code, Region from [Sales Analysis]) as DimLocation;
SELECT * INTO DimProduct
	from (SELECT product_id, category, Sub_Category, Product_name from [Sales Analysis]) as dimProduct;
SELECT * INTO SalesFact
	from (SELECT order_id, customer_id,product_id, postal_code, 
			Retail_sales_people, Returned, sales, quantity, discount, profit, Ship_Date, Ship_Mode from [Sales Analysis]) as dimSalesFact;

WITH OrderDup AS (
    SELECT *, 
           ROW_NUMBER() OVER(PARTITION BY ORDER_ID, ORDER_DATE, SHIP_DATE, SHIP_MODE ORDER BY Order_id) AS RowNum 
    FROM DimOrders
)
-- DELETE duplicates
DELETE FROM OrderDup
WHERE RowNum > 1

SELECT * FROM DimOrders

WITH ORDERCUST  AS (
			SELECT *, 
			ROW_NUMBER() OVER(PARTITION BY customer_id , customer_name, SEGMENT 
			ORDER BY CUSTOMER_ID) as rownum FROM DimCustomer
			) 
DELETE FROM ORDERCUST
WHERE rownum > 1;

WITH LOCA  AS (
			SELECT *, ROW_NUMBER() OVER (PARTITION BY COUNTRY, CITY, Postal_code, REGION ORDER BY COUNTRY) AS ROWNUM FROM DimLocation
			) 
DELETE FROM LOCA
WHERE rownum > 1;

SELECT * FROM DimProduct

WITH PRO  AS (
			SELECT *, ROW_NUMBER() OVER (PARTITION BY PRODUCT_ID, CATEGORY, SUB_CATEGORY, PRODUCT_NAME ORDER BY PRODUCT_ID) AS ROWNUM FROM DimProduct
			) 
DELETE FROM PRO
WHERE rownum > 1

WITH FACT  AS (
			SELECT *, ROW_NUMBER() OVER(PARTITION BY ORDER_ID, CUSTOMER_ID, PRODUCT_ID,
			RETAIL_SALES_PEOPLE, RETURNED, SALES, QUANTITY, DISCOUNT, PROFIT,
			SHIP_DATE, SHIP_MODE, SHIP_MODE ORDER BY ORDER_ID) FROM SalesFact
			) 
DELETE FROM FACT
WHERE rownum > 1


SELECT * FROM dbo.DimProduct
WHERE product_id = 'FUR-FU-10004091';

ALTER TABLE DimProduct
ADD PRODUCT_KEY INT IDENTITY (1, 1) PRIMARY KEY

ALTER TABLE SalesFact ADD Product_Key INT;

update SalesFact
set product_id = DimProduct.Product_key;

USE [CAPSTONE PROJECT]

select * FROM SalesFact;
ALTER TABLE SALESFACT ALTER COLUMN PRODUCT_KEY INT;


UPDATE SF
SET SF.Product_Key = DP.PRODUCT_KEY
FROM DimProduct DP
LEFT JOIN SalesFact SF
ON SF.PRODUCT_ID = DP.PRODUCT_ID

SELECT NAME FROM sys.key_constraints where parent_object_id = OBJECT_ID('dbo.dimproduct') and type = 'PK'
ALTER TABLE DBO.DIMPRODUCT DROP CONSTRAINT PK__DimProdu__42DBFA74AE53B0C4

ALTER TABLE DIMPRODUCT ALTER COLUMN PRODUCT_KEY INT NOT NULL

USE [CAPSTONE PROJECT]

SELECT * FROM DimOrders
SELECT * FROM DimProduct
UPDATE SF
SET SF.Order_Date = DO.Order_Date
FROM SalesFact SF
LEFT JOIN DimOrders DO
ON SF.order_id = DO.Order_id;

--FOR DELIIVERY DATE WE TABLES HAVE THE HIGHEST AVERAGE DELIVERY RATE 36, 
--FOLLOWED BY FURNISHINGS 34 AND CHAIRS AND BOOKCASE HAVE THE SAME SELIVERY DATE AT 32
SELECT DP.Sub_Category, AVG(DATEDIFF(DAY, SF.Order_Date, SF.Ship_Date)) AS AVERAGE_DELIVERY_DATE
FROM DimProduct DP
JOIN SalesFact SF ON DP.PRODUCT_KEY = SF.Product_Key
GROUP BY DP.Sub_Category
ORDER BY AVERAGE_DELIVERY_DATE DESC

--HOME OFFICE CUSTOMERS HAVE THE LOWEST AVERAGE DELIVERY DAYS AT 31 DAYS, 
--FOLLOWED BY THE CONSUMER CUSTOMERS AT 34 THE THE CORPORATE CUSTOMERS AT 35
SELECT DC.Segment, AVG(DATEDIFF(DAY, SF.Order_Date, SF.Ship_Date)) AS AVERAGE_DELIVERY_DATE
FROM DimCustomer DC
JOIN SalesFact SF ON DC.customer_id = SF.customer_id
GROUP BY DC.Segment
ORDER BY AVERAGE_DELIVERY_DATE DESC;

-- BEVIS CONFRENCE TABLE TAKES LONGER TO DELIVER AT 167 DAYS, 
--THEN BUSH MISSION CONFERENCE TABLE AT 123 DAYS WHICH HAS A TIE WITH GLOBAL ENTERPRISE TILT CHAIR
--THEN BUSH CUBIX COLLECTION BOOK CASE (FULLY ASSEMBLED) TAKES A AVERAGE OF 103 DAYS TO DELIVER, 
--AND LASTLY CARRER CUBICLE CLOCK TAKES 102 DAYS TO DELIVER
SELECT TOP 5 DP.Product_name, AVG(DATEDIFF(DAY, SF.Order_Date, SF.Ship_Date)) AS AVERAGE_DELIVERY_DATE
FROM DimProduct DP
JOIN SalesFact SF ON DP.PRODUCT_KEY = SF.Product_Key
GROUP BY DP.Product_name
ORDER BY AVERAGE_DELIVERY_DATE DESC

--CHAIRS BRINGS IN THE MOST PROFITS FETCHING A SUM OF $26,670.67, FOLLOWED BY FUNINSHING WHICH FETCHED $12,936.9
--BUT THE BOOKCASE AND TABLE SUB CATEGORIES FETCHED LOSES OF $3,550.04 IN BOOKCASE THEN $12,761.31 ON TABLES
SELECT DP.Sub_Category, ROUND(SUM(SF.PROFIT), 2) AS [TOTAL PROFIT]
FROM DimProduct DP
JOIN SalesFact SF
ON DP.PRODUCT_KEY = SF.Product_Key
GROUP BY DP.Sub_Category
ORDER BY [TOTAL PROFIT] DESC;

--OUR COORPORATE CUSTOMERS  MADE US THE MOST PROFIT AT A SUM OF $10, 649.44 FOLLOWED BY CONSUMERS AT $7,411.15
--THEN HOME OFFICE CUSTOMERS FETCH THE LEAST PROFIT AT $5235.52
SELECT DC.Segment, ROUND(SUM(SF.PROFIT), 2) AS [TOTAL PROFIT]
FROM DimCustomer DC
JOIN SalesFact SF ON DC.customer_id = SF.customer_id
GROUP BY DC.Segment
ORDER BY [TOTAL PROFIT] DESC;

--TOP 5 CUSTOMERS
--LAURA AMSTRONG- $1,146.49, QUINCY JONES- $1013.13, JOE ELIJAH- $968.08, BILL DONATELLI- $805.98, ANNE McFARLAND-$799.45
SELECT TOP 5 DC.customer_name, ROUND(SUM(SF.PROFIT), 2) AS [TOTAL PROFIT]
FROM DimCustomer DC
JOIN SalesFact SF ON DC.customer_id = SF.customer_id
GROUP BY DC.customer_name
ORDER BY [TOTAL PROFIT] DESC;

-- THE FURNISHIN SUBCATEGORY HAS THE HIGHEST NUMBER OF PRODUCT OF 186, 
--FOLLOWED BY CHAIRS 87 PRODUCT, THEM BOOKCASES AT 48 PRODUCTS AND 
--TALBLES AT 34 PRODUCTS
SELECT DP.Sub_Category, COUNT(DP.Product_name) [NO.of PRODUCT]
FROM DimProduct DP
GROUP BY DP.Sub_Category
ORDER BY [NO.of PRODUCT] DESC;

--MORE ANALYSIS
USE [CAPSTONE PROJECT]
 SELECT * FROM SalesFact
 --CLEANING METRICS
 UPDATE SalesFact
 SET sales = ROUND(sales, 2);
  UPDATE SalesFact
 SET DISCOUNT = ROUND(discount, 2);
  UPDATE SalesFact
 SET profit = ROUND(profit, 2)

 --PROFITABLE AND NON-PROFITABLE PRODUCTS

SELECT DP.Product_name,DP.Sub_Category, SUM(profit) [TOTAL PROFIT] FROM DimProduct DP
JOIN SalesFact SF
ON DP.PRODUCT_KEY = SF.Product_Key
GROUP BY Product_name, DP.category, DP.Sub_Category
HAVING SUM(profit) > 0
ORDER BY [TOTAL PROFIT] DESC;

SELECT DP.Product_name,DP.Sub_Category, SUM(profit) [TOTAL PROFIT] FROM DimProduct DP
JOIN SalesFact SF
ON DP.PRODUCT_KEY = SF.Product_Key
GROUP BY Product_name, DP.category, DP.Sub_Category
HAVING SUM(profit) < 0
ORDER BY [TOTAL PROFIT] ASC;

--CHAIRS SEATS AT THE THE MOST PROFITABLE PRODUCTS WITH 63 ITEMS AND 32,088.66 IN PROFIT, 
--FOLLOWED BY FURNISHING THAT HAS 15,974.89 IN PROFIT WITH 156 ITEMS IN TOTAL i.e. A LOT MORE ITEMS HAST TO BE SOLD TO MAINTAIN PROFIT MARGIN
--BOOKCASES ARE THE THIRD ON THE LIST WITH 3,469.99 IN PROFIT AND 16 ITEMS, AND LASTLY TABLES WITH 1831.66 PROFIT AND 8 ITEMS
--TABLES ON THE OTHER HAND ARE ALSO THE PRODUCT WITH THE MOST LOSSES WITH A TOTAL OF 14,592 IN LOSSES,
--FOLLOWED BY BOOKCASES WHICH HAS 7,020.03 IN PROFIT  BUT THAT IS HALF AS MUCH AS THE LOSSES INCURRED FRM THE SALES OF BOOKCASE
--CHAIRS HAVE A LOSS OF 5418 AND FURISHING 3,037 MAKING FURNISHING A LOW RISK LOW REWARD SUB-CATEGORY.
WITH LOSERS AS (
	SELECT DP.Product_name,DP.Sub_Category, SUM(profit) [TOTAL PROFIT] FROM DimProduct DP
	JOIN SalesFact SF
	ON DP.PRODUCT_KEY = SF.Product_Key
	GROUP BY Product_name, DP.category, DP.Sub_Category
	HAVING SUM(profit) < 0
	)
	SELECT Sub_Category, COUNT(*) Frequency, SUM([TOTAL PROFIT]) AS [TOTAL LOSS]
	FROM LOSERS
	GROUP BY Sub_Category
	ORDER BY [TOTAL LOSS] ASC;

	WITH PROFIT AS (
	SELECT DP.Product_name,DP.Sub_Category, SUM(profit) [TOTAL PROFIT] FROM DimProduct DP
	JOIN SalesFact SF
	ON DP.PRODUCT_KEY = SF.Product_Key
	GROUP BY Product_name, DP.category, DP.Sub_Category
	HAVING SUM(profit) > 0
	)
	SELECT Sub_Category, COUNT(*) Frequency, SUM([TOTAL PROFIT]) AS [TOTAL PROFIT]
	FROM PROFIT
	GROUP BY Sub_Category
	ORDER BY [TOTAL PROFIT] DESC;
	-- SALES ANALYSIS
	--CHAIRS MADE 327986.03 IN SALES AND HAD THE SECOND LAGEST QUANTITY AT 2344, 
	--FOLLOWED BY TABLES THAT HAS 122,943.59 IN SALES BUT HAS THE MOST AMOUNT OF LOSSES WITH THE LOWEST QUANTITY 
	--WHICH IMPLIES THAT TABLES ARE VARY EXPENSIVE, ALSO THE AVERAGE DISCOUNT IS MORE COMPARED TO OTHERS
	-- BOOKCASES DREW A REVENUE OF 103,713.63, WITH 840 IN QUANTITY MAKING IT THE THIRD SELLING PRODUCT
	--FURNISHING COMES LAST AT 91089.46 WITH 3535 IN QUANTITY  WHICH MAKES IT  A BEST SELLING BUT LOW REVENUE CATEGORY
SELECT 
DP.Sub_Category, 
ROUND(SUM(SF.sales), 2) AS [REVENUE], 
SUM(SF.quantity) [QUANTITY], 
ROUND(AVG(SF.discount), 2) AVG_DISCOUNT 
FROM SalesFact SF
JOIN DimProduct DP
ON DP.PRODUCT_KEY = SF.Product_Key
GROUP BY DP.Sub_Category
ORDER BY [REVENUE] DESC;

--WHAT IS WRONG IN TABLE SUB-CATEGORY
--All tables are unprofitable, with total costs exceeding revenue for every product.
--High sales volume does not guarantee profitability, as even top-selling items still incur losses.
--Pricing and cost management need optimization, as discounts alone do not explain the negative profit.
SELECT DP.Product_name, 
ROUND(AVG(SF.discount), 1) AVG_DISCOUNT, 
SUM(SF.profit) [TOTAL PROFIT], 
SUM(SF.quantity) [TOTAL QUANTITY], 
SUM(SF.sales) [TOTAL REVENUE],
SUM((SF.SALES-SF.PROFIT)) [TOTAL COST]
FROM DimProduct DP
RIGHT JOIN SalesFact SF
ON DP.PRODUCT_KEY = SF.Product_Key
WHERE DP.Sub_Category = 'TABLES'
GROUP BY DP.Product_name
ORDER BY [TOTAL PROFIT]